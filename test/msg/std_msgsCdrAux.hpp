// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file std_msgsCdrAux.hpp
 * This source file contains some definitions of CDR related functions.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__STD_MSGS_STD_MSGSCDRAUX_HPP
#define FAST_DDS_GENERATED__STD_MSGS_STD_MSGSCDRAUX_HPP

#include "std_msgs.hpp"

constexpr uint32_t std_msgs_Byte_max_cdr_typesize {5UL};
constexpr uint32_t std_msgs_Byte_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_ColorRGBA_max_cdr_typesize {20UL};
constexpr uint32_t std_msgs_ColorRGBA_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Empty_max_cdr_typesize {4UL};
constexpr uint32_t std_msgs_Empty_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Int64_max_cdr_typesize {16UL};
constexpr uint32_t std_msgs_Int64_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Bool_max_cdr_typesize {5UL};
constexpr uint32_t std_msgs_Bool_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Int8_max_cdr_typesize {5UL};
constexpr uint32_t std_msgs_Int8_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Char_max_cdr_typesize {5UL};
constexpr uint32_t std_msgs_Char_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Int32_max_cdr_typesize {8UL};
constexpr uint32_t std_msgs_Int32_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Int16_max_cdr_typesize {6UL};
constexpr uint32_t std_msgs_Int16_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_UInt32_max_cdr_typesize {8UL};
constexpr uint32_t std_msgs_UInt32_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_UInt64_max_cdr_typesize {16UL};
constexpr uint32_t std_msgs_UInt64_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_String_max_cdr_typesize {264UL};
constexpr uint32_t std_msgs_String_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_UInt8_max_cdr_typesize {5UL};
constexpr uint32_t std_msgs_UInt8_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_UInt16_max_cdr_typesize {6UL};
constexpr uint32_t std_msgs_UInt16_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Header_max_cdr_typesize {272UL};
constexpr uint32_t std_msgs_Header_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Float64_max_cdr_typesize {16UL};
constexpr uint32_t std_msgs_Float64_max_key_cdr_typesize {0UL};

constexpr uint32_t std_msgs_Float32_max_cdr_typesize {8UL};
constexpr uint32_t std_msgs_Float32_max_key_cdr_typesize {0UL};


namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Bool& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Byte& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Char& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Float32& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Float64& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Int8& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Int16& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Int32& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Int64& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::UInt8& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::UInt16& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::UInt32& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::UInt64& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::String& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::ColorRGBA& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Header& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const std_msgs::Empty& data);


} // namespace fastcdr
} // namespace eprosima

#endif // FAST_DDS_GENERATED__STD_MSGS_STD_MSGSCDRAUX_HPP

