#pragma once
#include "std_msgs.idl"
#include "PointField.idl"

// ##############################################################################
// # This message holds a collection of N-dimensional points, which may
// # contain additional information such as normals, intensity, etc. The
// # point data is stored as a binary blob, its layout described by the
// # contents of the "fields" array.
// #
// # The point cloud data may be organized 2d (image-like) or 1d (unordered).
// # Point clouds organized as 2d images may be produced by camera depth sensors
// # such as stereo or time-of-flight.

module sensor_msgs
{
    struct PointCloud2
    {
        std_msgs::Header _header;
        // # Time of sensor data acquisition, and the coordinate frame ID (for 3d points).

        unsigned long height;  // # 2D structure of the point cloud. If the cloud is unordered,
                               // # height is 1 and width is the length of the point cloud.
        unsigned long width;

        sequence<sensor_msgs::PointField> fields;
        // # Describes the channels and their layout in the binary data blob.

        boolean is_bigendian;   // # Is this data bigendian?
        unsigned long point_step; // # Length of a point in bytes
        unsigned long row_step;   // # Length of a row in bytes

        sequence<octet> data;   // # Actual point data, size is (row_step*height)

        boolean is_dense;       // # True if there are no invalid points
    };
};
